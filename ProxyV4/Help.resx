<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>