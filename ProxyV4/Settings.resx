<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>