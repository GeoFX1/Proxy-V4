<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EgAAFxIBZ5/SUgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAM9SURBVHhe7ZjN
        S1RRGMb9M/xoMsXxD+gDylqIROSigpZBtIuiqEXQok1EBUH0hUJJQRThd5YwiPnR6BShhjo2g46pm1oU
        tdCFISj6ds/lNLwzc1x4zuF67+154IfMPfe8h+fHHWe0CEEQBEEQBEEQxL9JzszdmMwsLE9m5incOB1n
        F67L2vbiDP9TeFhYWViWte1FfVB4kbXtJf+A+FiSWnuHqLM/QaOpmez1CYfY8Ai19MQplhhxX/N9QUHW
        thc+PP55ih6+6srypCNG49Nf3bWOvuGctY6+RHZfkJC17YUPb3OePC5J8N55IsVaY0t3zvXG1u7sviAh
        a9sLH9418DFHkuDDRMpda3KeRn5dvOZ7g4KsbS98+GgqQ087e7KS2tnbdGB0ghqa37rXxc9B5zXfGxRk
        bXvJP2B8eo4S41/oUzKdc10wls7QkPN7ciw9W7AWFGRte1EdEmZkbXtRHRJmZG174cPbY730+EVzqBCd
        eEdZ21748NPnL1H17v2hQnTiHWVte+HDIVAjfDgEaoQPh0CN8OEQqBE+HAI1wodDoEb4cAjUCB8OgRrh
        wyFQI3w4BGqED4dAjfDhEKgRPhwCNcKHb1VgtO6o8rqf8LXA4pUVKn/+kqKH6pTrfsDfAolcSn/9popb
        d6h6b43yvu0kEAKzImcyVHn2gvLe7cLfAldXCyQWb2xQ5F0/VR07qdzjNb4WGK0/TpFYjystX2TJ2hpF
        Xr+h6OF65V6v8LXAf1Seu0hlc/MFEl2Ri4vKPV4RCIEuew5QxdVrVPLjZ4FE5f0eERyBDtH6E7QjPgyB
        W6amlsqbnrnfC/PliQ8a5R6P8LdA53tf+d0HVLK0VCjOQXzAiA8a5V6P8LXAslRaKa7023eqvHxFucdr
        fC0wX5x4EsVfJNF9B5X3C3bdf0SR/kEjVHM3IxgC19dpZ0sbRWuPKO/jCAFcug6quZvhe4FlySmqOnVG
        ua4CAhkVt7f+DwS8hQMGBBoCgYZAoCEQaAgEGgKBhkCgIRBoCAQaAoGGQKAhEGgIBBriqcCb9xrcA8OE
        6MQ7ytr2wof/D8ja9qI6JMzI2vaiOiTMyNoIgiAIgiAIgiC+S1HRX/uYuaaWBqrQAAAAAElFTkSuQmCC
</value>
  </data>
</root>